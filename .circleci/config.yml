version: 2.1

orbs:
  trivy-orb: fifteen5/trivy-orb@1.0.0
  rezilion: rezilion/rezilion@10.0.0

jobs:
  vulnerability-scan:
    machine:
      docker_layer_caching: true
    steps:
      # Step 1: Check out the code (if applicable)
      - checkout

      # Step 2: Perform a vulnerability scan using Trivy Orb
      - trivy-orb/scan:
          args: '--no-progress --exit-code 1 image ubuntu:latest'

      # Step 3: Perform a license scan using Trivy Orb
      - trivy-orb/scan:
          #args: '--no-progress --exit-code 1 licence busybox'
          args: '--no-progress --security-checks license-full --severity UNKNOWN,HIGH,CRITICAL  --exit-code 1 image alpine:3.15'
      
      # Step 4: Install Trivy (for advanced use cases like license scanning)
      - run:
          name: Install Trivy
          command: |
            TRIVY_VERSION=$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')
            wget -q https://github.com/aquasecurity/trivy/releases/download/${TRIVY_VERSION}/trivy_${TRIVY_VERSION#v}_Linux-64bit.tar.gz -O trivy.tar.gz
            tar -xzf trivy.tar.gz
            sudo mv trivy /usr/local/bin/trivy
            trivy --version  # Verify installation

      # Step 5: License scan using Trivy CLI
      - run:
          name: Perform License Scan
          command: |
            trivy image alpine:3.15 --scanners license --severity UNKNOWN,HIGH,CRITICAL --format table
  
  test_mongo:
    docker:
      - image: mongo:5.0.5
    steps:
      - rezilion/rezilion_start:
          command: |
            timeout 10 docker-entrypoint.sh mongod || true
          image_to_scan: mongo:5.0.5

workflows:
  version: 2
  scan-workflow:
    jobs:
      - vulnerability-scan
      - test_mongo
      - rezilion/validate:
          requires:
            - test_mongo
